import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report
from sklearn.tree import DecisionTreeClassifier
# Step 1: Load the Iris dataset
iris = load_iris()
# Convert the dataset into a pandas DataFrame
iris_df = pd.DataFrame(data=np.c_[iris['data'], iris['target']],
                       columns=iris['feature_names'] + ['target'])
iris_df
print(iris_df.head())
print(iris_df.describe())
# Step 3: Prepare the data
X = iris.data  # Input features
y = iris.target  # Target labels
# Split the dataset into training and testing subsets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = SVC()
# Step 5: Train the model
model.fit(X_train, y_train)

# Step 6: Evaluate the model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
report = classification_report(y_test, y_pred)
print("Classification Report:")
print(report)
# Step 7: Make predictions
new_data = np.array([[5.1, 3.5, 1.4, 0.2], [6.2, 2.8, 4.8, 1.8], [7.3, 2.9, 6.3, 1.8]])
predicted_labels = model.predict(new_data)
print("Predicted labels for new data:")
print(predicted_labels)
# Visualize the scatter plot of sepal length vs. sepal width
plt.scatter(X[:, 0], X[:, 1], c=y)
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.title('Iris Species Classification - Sepal Measurements')
plt.show()
# Visualize the scatter plot of petal length vs. petal width
plt.scatter(X[:, 2], X[:, 3], c=y)
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')
plt.title('Iris Species Classification - Petal Measurements')
plt.show()
sepal_length = 5.1
sepal_width = 3.5
petal_length = 1.4
petal_width = 0.2

new_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
predicted_label = model.predict(new_data)
predicted_species = iris.target_names[predicted_label[0]]

print("Predicted species:", predicted_species)
import seaborn as sns

# Load the Iris dataset
iris = sns.load_dataset("iris")

# Create a pair plot
sns.pairplot(iris, hue="species")
plt.title("Pair Plot - Iris Dataset")
plt.show()

# Create a violin plot
sns.violinplot(x="species", y="sepal_length", data=iris)
plt.xlabel("Species")
plt.ylabel("Sepal Length")
plt.title("Violin Plot - Sepal Length by Species")
plt.show()

# Calculate the correlation matrix
correlation_matrix = iris.corr()

# Create a heatmap
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap - Iris Dataset")
plt.show()

from pandas.plotting import parallel_coordinates

# Create a parallel coordinates plot
plt.figure(figsize=(10, 6))
parallel_coordinates(iris, "species", colormap=plt.get_cmap("Set2"))
plt.title("Parallel Coordinates Plot - Iris Dataset")
plt.xlabel("Features")
plt.ylabel("Feature Values")
plt.legend(loc="upper right")
plt.show()

import pandas as pd
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

# Convert the dataset into a pandas DataFrame
iris_df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
iris_df['species'] = iris.target_names[iris.target]

# Filter and print details of the "setosa" species
setosa_details = iris_df[iris_df['species'] == 'setosa']
print(setosa_details)

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

# Filter the dataset for the "setosa" species
setosa_data = iris.data[iris.target == 0]
setosa_features = iris.feature_names

# Convert the filtered data to a pandas DataFrame
setosa_df = pd.DataFrame(data=setosa_data, columns=setosa_features)

# Create visualizations for the "setosa" species
for feature in setosa_features:
    plt.figure()
    sns.histplot(setosa_df[feature], kde=True)
    plt.title(f"{feature} - Setosa")
    plt.xlabel(feature)
    plt.ylabel("Count")

plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

# Convert the dataset into a pandas DataFrame
iris_df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
iris_df['species'] = iris.target_names[iris.target]

# Create box plots for each feature comparing the three species
for feature in iris.feature_names:
    plt.figure()
    sns.boxplot(x='species', y=feature, data=iris_df)
    plt.title(f"{feature} - Comparison of Iris Species")
    plt.xlabel("Species")
    plt.ylabel(feature)

plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()

# Convert the dataset into a pandas DataFrame
iris_df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
iris_df['species'] = iris.target_names[iris.target]

# Count the number of occurrences of each species
species_counts = iris_df['species'].value_counts()

# Create a bar plot to visualize the species distribution
plt.figure()
sns.barplot(x=species_counts.index, y=species_counts.values)
plt.title("Species Distribution in Iris Dataset")
plt.xlabel("Species")
plt.ylabel("Count")

plt.show()

